/* global self, clients, importScripts, workbox */

importScripts(
  'https://storage.googleapis.com/workbox-cdn/releases/6.4.1/workbox-sw.js'
)
importScripts("<%= javascript_url('turbo-offline-umd.js') %>")

// ------------- Push Notifications -------------
self.addEventListener('push', async (event) => {
  let data
  try {
    data = await event.data.json()
  } catch (e) {
    data = { title: event.data.text(), body: event.data.text(), icon: 'pwa_home_screen_icon.png' }
  }

  const title = data.title
  const options = {
    body: data.body,
    icon: data.icon,
    data
  }

  event.waitUntil(
    self.registration.showNotification(title, options)
  )
})

self.addEventListener('notificationclick', function (event) {
  event.notification.close()
  if (!event.notification.data.path) return

  event.waitUntil(
    clients.matchAll({ type: 'window' }).then((clientList) => {
      for (let i = 0; i < clientList.length; i++) {
        const client = clientList[i]
        const clientPath = (new URL(client.url)).pathname

        if (clientPath === event.notification.data.path && 'focus' in client) {
          return client.focus()
        }
      }

      if (clients.openWindow) {
        return clients.openWindow(event.notification.data.path)
      }
    })
  )
})

// ------------- Turbo Offline -------------
TurboOffline.addRule({
  match: /.*/,
  handler: TurboOffline.handlers.networkFirst({
    cacheName: "general",
    maxAge: 60 * 60 * 24 * 7,
    networkTimeout: 3
  })
})

TurboOffline.start()